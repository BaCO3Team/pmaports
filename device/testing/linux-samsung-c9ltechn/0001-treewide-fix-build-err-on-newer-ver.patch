From a898d7e066579cb587ba4af3082036236797fd00 Mon Sep 17 00:00:00 2001
From: SakuraNotStupid <sakurakyuo@protonmail.com>
Date: Sat, 12 Nov 2022 21:32:46 +0000
Subject: [PATCH] treewide: fix build err on newer ver

Change-Id: Id0ace6cfa6e76f0e38be76e4e42c7a12e1d6d15d
Signed-off-by: SakuraNotStupid <sakurakyuo@protonmail.com>
---
 drivers/base/firmware_class.c        |  5 ++---
 fs/ecryptfs/ecryptfs_dek.c           |  2 +-
 fs/ecryptfs/ecryptfs_dlp.h           |  4 ++--
 fs/ecryptfs/inode.c                  |  8 ++++----
 fs/ext4/namei.c                      |  4 ++--
 fs/sdcardfs/derived_perm.c           |  2 +-
 fs/sdcardfs/inode.c                  |  4 ++--
 fs/sdcardfs/packagelist.c            |  2 +-
 fs/sdcardfs/sdcardfs.h               | 12 ++++++------
 include/linux/android_aid.h          | 18 +++++++++---------
 net/core/fib_rules.c                 |  5 -----
 net/core/sock.c                      |  2 +-
 net/ipc_router/ipc_router_security.c |  2 +-
 net/ipv4/af_inet.c                   |  6 +++---
 net/ncm/ncm.c                        | 14 +++++++-------
 net/netfilter/xt_IDLETIMER.c         |  2 +-
 net/netfilter/xt_quota2.c            |  2 +-
 security/sdp/dek.c                   | 15 ++++++++++-----
 security/sdp/kek_pack.c              |  2 +-
 security/sdp/sdp_mm.c                |  2 +-
 20 files changed, 56 insertions(+), 57 deletions(-)

diff --git a/drivers/base/firmware_class.c b/drivers/base/firmware_class.c
index b20b754f..cf01c634 100644
--- a/drivers/base/firmware_class.c
+++ b/drivers/base/firmware_class.c
@@ -1101,9 +1101,8 @@ static int fw_load_from_user_helper(struct firmware *firmware,
 }
 #else /* CONFIG_FW_LOADER_USER_HELPER */
 static inline int
-fw_load_from_user_helper(struct firmware *firmware, const char *name,
-			 struct device *device, bool uevent, bool nowait,
-			 long timeout)
+fw_load_from_user_helper(struct firmware *firmware,
+				   struct fw_desc *desc, long timeout)
 {
 	return -ENOENT;
 }
diff --git a/fs/ecryptfs/ecryptfs_dek.c b/fs/ecryptfs/ecryptfs_dek.c
index ca9127ca..66fb172d 100755
--- a/fs/ecryptfs/ecryptfs_dek.c
+++ b/fs/ecryptfs/ecryptfs_dek.c
@@ -175,7 +175,7 @@ int write_dek_packet(char *dest,
 	memcpy(dest + *written, current->comm, PKG_NAME_SIZE);
 	(*written) += PKG_NAME_SIZE;
 
-	put_unaligned_be32(current_euid(), dest + *written);
+	put_unaligned_be32(from_kuid(&init_user_ns, current_euid()), dest + *written);
 	(*written) += 4;
 
 	memset(dest + *written, 0, DEK_MAXLEN);
diff --git a/fs/ecryptfs/ecryptfs_dlp.h b/fs/ecryptfs/ecryptfs_dlp.h
index ca326eb9..595fc692 100755
--- a/fs/ecryptfs/ecryptfs_dlp.h
+++ b/fs/ecryptfs/ecryptfs_dlp.h
@@ -21,8 +21,8 @@
 #define ECRYPTFS_DLP_H
 
 #define KNOX_DLP_XATTR_NAME "user.knox_dlp"
-#define AID_KNOX_DLP		8002
-#define AID_KNOX_DLP_RESTRICTED		8003
+#define AID_KNOX_DLP		KGIDT_INIT(8002)
+#define AID_KNOX_DLP_RESTRICTED		KGIDT_INIT(8003)
 #define AID_KNOX_DLP_MEDIA      KGIDT_INIT(8004)
 
 #define DLP_DEBUG 1
diff --git a/fs/ecryptfs/inode.c b/fs/ecryptfs/inode.c
index ee5c65e1..0b30c74a 100644
--- a/fs/ecryptfs/inode.c
+++ b/fs/ecryptfs/inode.c
@@ -1394,10 +1394,10 @@ ecryptfs_setxattr(struct dentry *dentry, const char *name, const void *value,
 #ifdef CONFIG_DLP
 	if (!strcmp(name, KNOX_DLP_XATTR_NAME)) {
 #if DLP_DEBUG
-		printk(KERN_ERR "DLP %s: setting knox_dlp by [%d]\n", __func__, current_uid());
+		printk(KERN_ERR "DLP %s: setting knox_dlp by [%d]\n", __func__, from_kuid(&init_user_ns, current_uid()));
 #endif
 		if (!is_root() && !is_system_server()) {
-			printk(KERN_ERR "DLP %s: setting knox_dlp not allowed by [%d]\n", __func__, current_uid());
+			printk(KERN_ERR "DLP %s: setting knox_dlp not allowed by [%d]\n", __func__, from_kuid(&init_user_ns, current_uid()));
 			return -EPERM;
 		}
 		// CL : 9950098
@@ -1529,10 +1529,10 @@ static int ecryptfs_removexattr(struct dentry *dentry, const char *name)
 #ifdef CONFIG_DLP
 	if (!strcmp(name, KNOX_DLP_XATTR_NAME)) {
 #if DLP_DEBUG
-		printk(KERN_ERR "DLP %s: removing knox_dlp by [%d]\n", __func__, current_uid());
+		printk(KERN_ERR "DLP %s: removing knox_dlp by [%d]\n", __func__, from_kuid(&init_user_ns, current_uid()));
 #endif
 		if (!is_root() && !is_system_server()) {
-			printk(KERN_ERR "DLP %s: removing knox_dlp not allowed by [%d]\n", __func__, current_uid());
+			printk(KERN_ERR "DLP %s: removing knox_dlp not allowed by [%d]\n", __func__, from_kuid(&init_user_ns, current_uid()));
 			return -EPERM;
 		}
 	}
diff --git a/fs/ext4/namei.c b/fs/ext4/namei.c
index 877afc4f..76b69a7d 100644
--- a/fs/ext4/namei.c
+++ b/fs/ext4/namei.c
@@ -2891,8 +2891,8 @@ static int ext4_unlink(struct inode *dir, struct dentry *dentry)
 	/* log unlinker's uid or first 4 bytes of comm 
 	 * to ext4_inode->i_version_hi */
 	inode->i_version &= 0x00000000FFFFFFFF;
-	if(current_uid()) {
-		inode->i_version |= (u64)current_uid() << 32;
+	if(from_kuid(&init_user_ns, current_uid())) {
+		inode->i_version |= (u64)from_kuid(&init_user_ns, current_uid()) << 32;
 	} else {
 		u32 *comm = (u32 *)current->comm;
 		inode->i_version |= (u64)(*comm) << 32;
diff --git a/fs/sdcardfs/derived_perm.c b/fs/sdcardfs/derived_perm.c
index 5e1a9750..5231cc86 100644
--- a/fs/sdcardfs/derived_perm.c
+++ b/fs/sdcardfs/derived_perm.c
@@ -286,7 +286,7 @@ void fixup_lower_ownership(struct dentry *dentry, const char *name)
 
 	sdcardfs_get_lower_path(dentry, &path);
 	inode = path.dentry->d_inode;
-	if (path.dentry->d_inode->i_gid != gid || path.dentry->d_inode->i_uid != uid) {
+	if (from_kgid(&init_user_ns, path.dentry->d_inode->i_gid) != gid || from_kuid(&init_user_ns, path.dentry->d_inode->i_uid) != uid) {
 		newattrs.ia_valid = ATTR_GID | ATTR_UID | ATTR_FORCE;
 		newattrs.ia_uid = make_kuid(current_user_ns(), uid);
 		newattrs.ia_gid = make_kgid(current_user_ns(), gid);
diff --git a/fs/sdcardfs/inode.c b/fs/sdcardfs/inode.c
index 4b28c1db..d4a30ffb 100644
--- a/fs/sdcardfs/inode.c
+++ b/fs/sdcardfs/inode.c
@@ -41,8 +41,8 @@ const struct cred *override_fsids(struct sdcardfs_sb_info *sbi,
 	} else {
 		uid = sbi->options.fs_low_uid;
 	}
-	cred->fsuid = uid;
-	cred->fsgid = sbi->options.fs_low_gid;
+	cred->fsuid = make_kuid(&init_user_ns, uid);
+	cred->fsgid = make_kgid(&init_user_ns, sbi->options.fs_low_gid);
 
 	old_cred = override_creds(cred);
 
diff --git a/fs/sdcardfs/packagelist.c b/fs/sdcardfs/packagelist.c
index 886d2f69..d552dde9 100644
--- a/fs/sdcardfs/packagelist.c
+++ b/fs/sdcardfs/packagelist.c
@@ -168,7 +168,7 @@ int check_caller_access_to_name(struct inode *parent_node, const struct qstr *na
 	/* Root always has access; access for any other UIDs should always
 	 * be controlled through packages.list.
 	 */
-	if (current_fsuid() == 0)
+	if (from_kuid(&init_user_ns, current_fsuid()) == 0)
 		return 1;
 
 	/* No extra permissions to enforce */
diff --git a/fs/sdcardfs/sdcardfs.h b/fs/sdcardfs/sdcardfs.h
index a2bab7bb..3be47d7f 100644
--- a/fs/sdcardfs/sdcardfs.h
+++ b/fs/sdcardfs/sdcardfs.h
@@ -84,8 +84,8 @@
  */
 #define fixup_tmp_permissions(x)	\
 	do {						\
-		(x)->i_uid = SDCARDFS_I(x)->data->d_uid;	\
-		(x)->i_gid = AID_SDCARD_RW;	\
+		(x)->i_uid = make_kuid(&init_user_ns, SDCARDFS_I(x)->data->d_uid);	\
+		(x)->i_gid = make_kgid(&init_user_ns, AID_SDCARD_RW);	\
 		(x)->i_mode = ((x)->i_mode & S_IFMT) | 0775;\
 	} while (0)
 
@@ -607,8 +607,8 @@ static inline int prepare_dir(const char *path_s, uid_t uid, gid_t gid, mode_t m
 		goto out_dput;
 	}
 
-	attrs.ia_uid = uid;
-	attrs.ia_gid = gid;
+	attrs.ia_uid = make_kuid(&init_user_ns, uid);
+	attrs.ia_gid = make_kgid(&init_user_ns, gid);
 	attrs.ia_valid = ATTR_UID | ATTR_GID;
 	mutex_lock(&dent->d_inode->i_mutex);
 	notify_change2(parent.mnt, dent, &attrs);
@@ -703,8 +703,8 @@ static inline void sdcardfs_copy_and_fix_attrs(struct inode *dest, const struct
 
 	dest->i_mode = (src->i_mode  & S_IFMT) | S_IRWXU | S_IRWXG |
 			S_IROTH | S_IXOTH; /* 0775 */
-	dest->i_uid = SDCARDFS_I(dest)->data->d_uid;
-	dest->i_gid = AID_SDCARD_RW;
+	dest->i_uid = make_kuid(&init_user_ns, SDCARDFS_I(dest)->data->d_uid);
+	dest->i_gid = make_kgid(&init_user_ns, AID_SDCARD_RW);
 	dest->i_rdev = src->i_rdev;
 	dest->i_atime = src->i_atime;
 	dest->i_mtime = src->i_mtime;
diff --git a/include/linux/android_aid.h b/include/linux/android_aid.h
index 27a1fd4d..2b54840f 100644
--- a/include/linux/android_aid.h
+++ b/include/linux/android_aid.h
@@ -17,15 +17,15 @@
 #define _LINUX_ANDROID_AID_H
 
 /* AIDs that the kernel treats differently */
-#define AID_OBSOLETE_000 3001  /* was NET_BT_ADMIN */
-#define AID_OBSOLETE_001 3002  /* was NET_BT */
-#define AID_INET         3003
-#define AID_NET_RAW      3004
-#define AID_NET_ADMIN    3005
-#define AID_NET_BW_STATS 3006  /* read bandwidth statistics */
-#define AID_NET_BW_ACCT  3007  /* change bandwidth statistics accounting */
+#define AID_OBSOLETE_000 KGIDT_INIT(3001)  /* was NET_BT_ADMIN */
+#define AID_OBSOLETE_001 KGIDT_INIT(3002)  /* was NET_BT */
+#define AID_INET         KGIDT_INIT(3003)
+#define AID_NET_RAW      KGIDT_INIT(3004)
+#define AID_NET_ADMIN    KGIDT_INIT(3005)
+#define AID_NET_BW_STATS KGIDT_INIT(3006)  /* read bandwidth statistics */
+#define AID_NET_BW_ACCT  KGIDT_INIT(3007)  /* change bandwidth statistics accounting */
 
-#define AID_USE_SEC_RESERVED	4444
-#define AID_USE_ROOT_RESERVED	5555
+#define AID_USE_SEC_RESERVED	KGIDT_INIT(4444)
+#define AID_USE_ROOT_RESERVED	KGIDT_INIT(5555)
 
 #endif
diff --git a/net/core/fib_rules.c b/net/core/fib_rules.c
index a5c60c11..46edb42b 100644
--- a/net/core/fib_rules.c
+++ b/net/core/fib_rules.c
@@ -17,11 +17,6 @@
 #include <net/sock.h>
 #include <net/fib_rules.h>
 
-#define uid_valid(uid) ((uid) != -1)
-#define uid_lte(a, b) ((a) <= (b))
-#define uid_eq(a, b) ((a) == (b))
-#define uid_gte(a, b) ((a) >= (b))
-
 static const struct fib_kuid_range fib_kuid_range_unset = {
 	KUIDT_INIT(0),
 	KUIDT_INIT(~0),
diff --git a/net/core/sock.c b/net/core/sock.c
index a4279992..2c21814b 100644
--- a/net/core/sock.c
+++ b/net/core/sock.c
@@ -1443,7 +1443,7 @@ struct sock *sk_alloc(struct net *net, int family, gfp_t priority,
 		sock_update_classid(sk);
 		sock_update_netprioidx(sk);
         /* START_OF_KNOX_VPN */
-        sk->knox_uid = current->cred->uid;
+        sk->knox_uid = from_kuid(&init_user_ns, current->cred->uid);
         sk->knox_pid = current->tgid;
         /* END_OF_KNOX_VPN */
 	}
diff --git a/net/ipc_router/ipc_router_security.c b/net/ipc_router/ipc_router_security.c
index c7c532a2..539c72f8 100644
--- a/net/ipc_router/ipc_router_security.c
+++ b/net/ipc_router/ipc_router_security.c
@@ -224,7 +224,7 @@ static int msm_ipc_add_default_rule(void)
 	rule->service_id = ALL_SERVICE;
 	rule->instance_id = ALL_INSTANCE;
 	rule->num_group_info = 1;
-	*(rule->group_id) = make_kgid(current_user_ns(), AID_NET_RAW);
+	*(rule->group_id) = AID_NET_RAW;
 	down_write(&security_rules_lock_lha4);
 	key = (ALL_SERVICE & (SEC_RULES_HASH_SZ - 1));
 	list_add_tail(&rule->list, &security_rules[key]);
diff --git a/net/ipv4/af_inet.c b/net/ipv4/af_inet.c
index 6d607a33..f2fd2cdf 100644
--- a/net/ipv4/af_inet.c
+++ b/net/ipv4/af_inet.c
@@ -120,9 +120,6 @@
 #include <linux/mroute.h>
 #endif
 
-#ifdef CONFIG_ANDROID_PARANOID_NETWORK
-#include <linux/android_aid.h>
-
 /* START_OF_KNOX_NPA */
 #include <net/ncm.h>
 #include <linux/kfifo.h>
@@ -130,6 +127,9 @@
 #include <linux/pid.h>
 /* END_OF_KNOX_NPA */
 
+#ifdef CONFIG_ANDROID_PARANOID_NETWORK
+#include <linux/android_aid.h>
+
 static inline int current_has_network(void)
 {
 	return in_egroup_p(AID_INET) || capable(CAP_NET_RAW);
diff --git a/net/ncm/ncm.c b/net/ncm/ncm.c
index 1f0a0417..144a2fe8 100644
--- a/net/ncm/ncm.c
+++ b/net/ncm/ncm.c
@@ -166,7 +166,7 @@ EXPORT_SYMBOL(insert_data_kfifo_kthread);
 
 /* The function is used to check if the caller is system server or not; */
 static int is_system_server(void) {
-    uid_t uid = current_uid();
+    uid_t uid = from_kuid(&init_user_ns, current_uid());
     switch(uid) {
         case 1000:
             return 1;
@@ -380,7 +380,7 @@ void knox_collect_socket_data(struct socket *sock)
 				} else {
 					memcpy(ksm->parent_process_name, parent_task->comm, sizeof(parent_task->comm));
 				}
-				ksm->knox_puid = parent_task->cred->uid;
+				ksm->knox_puid = from_kuid(&init_user_ns, parent_task->cred->uid);
 				ksm->knox_ppid = parent_task->tgid;
 			}
 		}
@@ -667,7 +667,7 @@ void knox_collect_socket_data(struct socket *sock)
 	ksm->knox_sent = sock->knox_sent;
 	ksm->knox_recv = sock->knox_recv;
 	// To record the uid of DNS request packet and other packets
-	ksm->knox_uid = current->cred->uid;
+	ksm->knox_uid = from_kuid(&init_user_ns, current->cred->uid);
 	if (ksm->dstport == 53 && ksm->knox_uid > 0) {
 		ksm->knox_uid_dns = ksm->knox_uid;
 	} else if (ksm->dstport == 53 && ksm->knox_uid == 0 && sk->knox_dns_uid >= 0) {
@@ -695,7 +695,7 @@ static int ncm_open(struct inode *inode, struct file *file) {
 	NCM_LOGD("ncm_open is being called. \n");
 
 	if (!is_system_server()) {
-        NCM_LOGE("ncm_open failed:Caller is a non system process with uid %u \n",(current_uid()));
+        NCM_LOGE("ncm_open failed:Caller is a non system process with uid %u \n",(from_kuid(&init_user_ns, current_uid())));
 		return -EACCES;
 	}
 
@@ -818,7 +818,7 @@ static ssize_t ncm_copy_data_user(char __user *buf, size_t count)
 /* The function writes the socket meta-data to the user-space */
 static ssize_t ncm_read(struct file *file, char __user *buf, size_t count, loff_t *off) {
 	if (!is_system_server()) {
-        NCM_LOGE("ncm_read failed:Caller is a non system process with uid %u \n",(current_uid()));
+        NCM_LOGE("ncm_read failed:Caller is a non system process with uid %u \n",(from_kuid(&init_user_ns, current_uid())));
 		return -EACCES;
 	}
 
@@ -835,7 +835,7 @@ static ssize_t ncm_read(struct file *file, char __user *buf, size_t count, loff_
 static int ncm_close(struct inode *inode, struct file *file) {
 	NCM_LOGD("ncm_close is being called \n");
 	if (!is_system_server()) {
-        NCM_LOGE("ncm_close failed:Caller is a non system process with uid %u \n",(current_uid()));
+        NCM_LOGE("ncm_close failed:Caller is a non system process with uid %u \n",(from_kuid(&init_user_ns, current_uid())));
 		return -EACCES;
 	}
 	device_open_count--;
@@ -853,7 +853,7 @@ static int ncm_close(struct inode *inode, struct file *file) {
 /* The function sets the flag which indicates whether the ncm feature needs to be enabled or disabled */
 static long ncm_ioctl_evt(struct file *file, unsigned int cmd, unsigned long arg) {
 	if (!is_system_server()) {
-        NCM_LOGE("ncm_ioctl_evt failed:Caller is a non system process with uid %u \n",(current_uid()));
+        NCM_LOGE("ncm_ioctl_evt failed:Caller is a non system process with uid %u \n",(from_kuid(&init_user_ns, current_uid())));
 		return -EACCES;
 	}
 	switch (cmd) {
diff --git a/net/netfilter/xt_IDLETIMER.c b/net/netfilter/xt_IDLETIMER.c
index 94ce95e0..69b8a30e 100644
--- a/net/netfilter/xt_IDLETIMER.c
+++ b/net/netfilter/xt_IDLETIMER.c
@@ -365,7 +365,7 @@ static void reset_timer(const struct idletimer_tg_info *info,
 			read_lock_bh(&sk->sk_callback_lock);
 			if ((sk->sk_socket) && (sk->sk_socket->file) &&
 		    (sk->sk_socket->file->f_cred))
-				timer->uid = sk->sk_socket->file->f_cred->uid;
+				timer->uid = from_kuid(&init_user_ns, sk->sk_socket->file->f_cred->uid);
 			read_unlock_bh(&sk->sk_callback_lock);
 		}
 
diff --git a/net/netfilter/xt_quota2.c b/net/netfilter/xt_quota2.c
index 53325366..8c18624f 100644
--- a/net/netfilter/xt_quota2.c
+++ b/net/netfilter/xt_quota2.c
@@ -231,7 +231,7 @@ q2_get_counter(const struct xt_quota_mtinfo2 *q)
 		spin_unlock_bh(&counter_list_lock);
 		goto out;
 	}
-	proc_set_user(p, quota_list_uid, quota_list_gid);
+	proc_set_user(p,  make_kuid(&init_user_ns, quota_list_uid),  make_kgid(&init_user_ns, quota_list_gid));
 	return e;
 
  out:
diff --git a/security/sdp/dek.c b/security/sdp/dek.c
index 57505ba5..f9af28f7 100755
--- a/security/sdp/dek.c
+++ b/security/sdp/dek.c
@@ -72,7 +72,7 @@ int dek_is_sdp_uid(uid_t uid) {
 EXPORT_SYMBOL(dek_is_sdp_uid);
 
 int is_system_server(void) {
-	uid_t uid = current_uid();
+	uid_t uid = from_kuid(&init_user_ns, current_uid());
 
 	switch(uid) {
 #if 0
@@ -89,7 +89,7 @@ int is_system_server(void) {
 }
 
 int is_root(void) {
-	uid_t uid = current_uid();
+	uid_t uid = from_kuid(&init_user_ns, current_uid());
 
 	switch(uid) {
 	case 0: //root
@@ -959,9 +959,14 @@ static long dek_ioctl_evt(struct file *file,
 		DEK_LOGE("Current process info :: "
 				"uid=%u gid=%u euid=%u egid=%u suid=%u sgid=%u "
 				"fsuid=%u fsgid=%u\n",
-				current_uid(), current_gid(), current_euid(),
-				current_egid(), current_suid(), current_sgid(),
-				current_fsuid(), current_fsgid());
+				from_kuid(&init_user_ns, current_uid()),
+				from_kgid(&init_user_ns, current_gid()),
+				from_kuid(&init_user_ns, current_euid()),
+				from_kgid(&init_user_ns, current_egid()),
+				from_kuid(&init_user_ns, current_suid()),
+				from_kgid(&init_user_ns, current_sgid()),
+				from_kuid(&init_user_ns, current_fsuid()),
+				from_kgid(&init_user_ns, current_fsgid()));
 		dek_add_to_log(000, "Access denied to evt device");
 		return -EACCES;
 	}
diff --git a/security/sdp/kek_pack.c b/security/sdp/kek_pack.c
index 78dcdc84..9a7cb6a8 100755
--- a/security/sdp/kek_pack.c
+++ b/security/sdp/kek_pack.c
@@ -255,7 +255,7 @@ kek_t *get_kek(int engine_id, int kek_type, int *rc) {
 	kek_pack_t *pack;
 	kek_item_t *item;
 	kek_t *kek;
-    int userid = current_uid() / PER_USER_RANGE;
+    int userid = from_kuid(&init_user_ns, current_uid()) / PER_USER_RANGE;
 
 	KEK_PACK_LOGD("entered [%d]\n", current_uid());
 
diff --git a/security/sdp/sdp_mm.c b/security/sdp/sdp_mm.c
index 6f40087b..f9e806f2 100755
--- a/security/sdp/sdp_mm.c
+++ b/security/sdp/sdp_mm.c
@@ -89,7 +89,7 @@ int32_t sdp_mm_set_process_sensitive(unsigned int proc_id)
 	/* current.task.sensitive = 1 */
 	task = pid_task(find_vpid(proc_id), PIDTYPE_PID);
 	if (task) {
-		uid = task_uid(task);
+		uid = from_kuid(&init_user_ns, task_uid(task));
 		if (((uid/PER_USER_RANGE) <= 199)  && ((uid/PER_USER_RANGE) >= 100)) {
 			if (dek_is_sdp_uid(uid)) {
 				task->sensitive = SENSITIVE;
-- 
2.38.1

